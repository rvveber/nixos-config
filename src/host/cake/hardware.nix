# (Initially copied from hardware-configuration.nix)
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [(modulesPath + "/installer/scan/not-detected.nix")];

  boot = {
    initrd = {
      availableKernelModules = ["xhci_pci" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sr_mod"];
      luks.devices = {
        "luks-71cfbe03-2af1-4e86-b2f9-9e4ca147568b".device = "/dev/disk/by-uuid/71cfbe03-2af1-4e86-b2f9-9e4ca147568b";
        "luks-3f8b1b13-8d81-453a-9e08-f0c02c908df3".device = "/dev/disk/by-uuid/3f8b1b13-8d81-453a-9e08-f0c02c908df3";
      };
    };

    kernelModules = [];
    kernelParams = ["libata.noacpi=1" "nvidia.NVreg_PreserveVideoMemoryAllocations=1"];
  };

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/6f3478ce-1902-4dbd-aa71-5c46899d85e3";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-uuid/4553-95FF";
      fsType = "vfat";
      options = ["fmask=0022" "dmask=0022"];
    };
    "/mnt/sdb1" = {
      device = "/dev/sdb1";
      fsType = "btrfs";
    };
    "/mnt/sdb2" = {
      device = "/dev/sdb2";
      fsType = "ntfs3";
    };
  };

  swapDevices = [{device = "/dev/disk/by-uuid/cfd164a9-bf38-43ff-ac38-f7c5771af6b1";}];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
